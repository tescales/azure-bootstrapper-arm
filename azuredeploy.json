{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "gitHubUser": {
      "type": "string",
      "metadata": {
        "description": "Your GitHub username"
      },
      "defaultValue": "tescales"
    },
    "gitHubRepo": {
      "type": "string",
      "metadata": {
        "description": "Your GitHub repo"
      },
      "defaultValue": "azure-bootstrapper-arm"
    },
    "bootStrapUri": {
      "type": "string",
      "metadata": {
        "description": "URI for your bootstrap script; if not specified will pull bootstrap/bootstrap.sh from the GH repo."
      },
      "defaultValue": ""
    },
    "subscriptionId": {
      "type": "string",
      "metadata": {
        "description": "Your Azure Subscription Id"
      },
      "defaultValue": "[subscription().subscriptionId]"
    },
    "aadTenantId": {
      "type": "string",
      "metadata": {
        "description": "Your AzureAD TenantId"
      },
      "defaultValue": "[subscription().tenantId]"
    },
    "roleName": {
      "type": "string",
      "metadata": {
        "description": "Choose the Role to Assign to Bootstrapper Container"
      },
      "defaultValue": "Owner"
    },
    "newVaultName": {
      "type": "string",
      "metadata": {
        "description": "Enter a name to deploy a new KeyVault and grant access to the bootstrapper script, or type 'none' to skip."
      },
      "defaultValue": "none"
    }
  },
  "variables": {
    "imagePath": "mcr.microsoft.com/azure-cli",
    "imageName": "[take(toLower( split(variables('imagePath'),'/')[1]),23)]",
    "cgName": "[concat('deploy_', variables('imageName'))]",
    "roleDefinitions": {
      "Owner": {
        "id": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
      },
      "Contributor": {
        "id": "b24988ac-6180-42a0-ab88-20f7382dd24c"
      },
      "Reader": {
        "id": "acdd72a7-3385-48ef-bd42-f606fba81ae7"
      },
      "StorageBlobDataOwner": {
        "id": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b"
      },
      "StorageBlobDataContributor": {
        "id": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
      },
      "StorageBlobDataReader": {
        "value": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1"
      },
      "None": {
        "id": "none"
      }
    },
    "chosenRole": "[variables('roleDefinitions')[parameters('roleName')].id]",
    "roleDefinitionId": "[concat('/subscriptions/', parameters('subscriptionId'), '/providers/Microsoft.Authorization/roleDefinitions/', variables('chosenRole'))]",
    "roleAssignmentId": "[guid(resourceGroup().name)]",
    "thisRepoUri": "[if(contains(string(deployment().properties), 'templateLink'), 'https://raw.githubusercontent.com/tescales/azure-bootstrapper-arm/master', deployment().templateLink.uri)]",
    "thisRepoUser": "[take(skip(array(split(variables('thisRepoUri'), '/')),3),1)[0]]",
    "thisRepo": "[take(skip(array(split(variables('thisRepoUri'), '/')),4),1)[0]]",
    "ghURI": "[concat('https://raw.githubusercontent.com/', parameters('gitHubUser'), '/', parameters('gitHubRepo'), '/master/bootstrap/bootstrap.sh')]",
    "bootStrapUri": "[if(empty(parameters('bootStrapUri')),variables('ghURI'),parameters('bootStrapUri'))]"
  },
  "resources": [
    {
      "name": "[variables('cgName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-10-01",
      "location": "[resourcegroup().location]",
      "comments": "",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "containers": [
          {
            "name": "[variables('imageName')]",
            "properties": {
              "image": "[variables('imagePath')]",
              "command": [
                "/bin/bash",
                "-c",
                "chmod +x /$THIS_REPO/bootstrap/login.sh; /$THIS_REPO/bootstrap/login.sh"
              ],
              "volumeMounts": [
                {
                  "name": "git-bootstrapper",
                  "mountPath": "[concat('/', variables('thisRepoUser'))]"
                }
              ],
              "environmentVariables": [
                {
                  "name": "BOOTSTRAP_URI",
                  "value": "[variables('bootStrapUri')]"
                },
                {
                  "name": "THIS_REPO",
                  "value": "[concat(variables('thisRepoUser'), '/', variables('thisRepo'))]"
                },
                {
                  "name": "AZURE_RESOURCE_GROUP",
                  "value": "[resourceGroup().name]"
                },
                {
                  "name": "AZURE_LOCATION",
                  "value": "[resourceGroup().location]"
                },
                {
                  "name": "AZURE_SUBSCRIPTION_ID",
                  "value": "[parameters('subscriptionId')]"
                },
                {
                  "name": "AZURE_AADTENANT_ID",
                  "value": "[parameters('aadTenantId')]"
                },
                {
                  "name": "AZURE_KEYVAULT",
                  "value": "[parameters('newVaultName')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "1",
                  "memoryInGb": "1"
                }
              }
            }
          }
        ],
        "restartPolicy": "OnFailure",
        "osType": "Linux",
        "volumes": [
          {
            "name": "git-bootstrapper",
            "gitRepo": {
              "repository": "[concat('https://github.com/', variables('thisRepoUser'), '/', variables('thisRepo'))]"
            }
          }
        ]
      }
    },
    {
      "condition": "[not(equals(variables('chosenRole'),'none'))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2017-09-01",
      "name": "[variables('roleAssignmentId')]",
      "dependsOn": [
        "[concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('roleDefinitionId')]",
        "principalId": "[reference(concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName')), '2018-10-01', 'Full').identity.principalId]",
        "scope": "[resourcegroup().id]"
      }
    },
    {
      "condition": "[not(equals(parameters('newVaultName'),'none'))]",
      "name": "[parameters('newVaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "location": "[resourcegroup().location]",
      "tags": {},
      "dependsOn": [
        "[concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName'))]"
      ],
      "properties": {
        "tenantId": "[parameters('aadTenantId')]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [
          {
            "tenantId": "[reference(concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName')), '2018-10-01', 'Full').identity.tenantId]",
            "objectId": "[reference(concat('Microsoft.ContainerInstance/containerGroups/', variables('cgName')), '2018-10-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [],
              "secrets": [
                "all"
              ],
              "certificates": [],
              "storage": []
            }
          }
        ],
        "enabledForTemplateDeployment": true
      }
    }
  ],
  "outputs": {}
}